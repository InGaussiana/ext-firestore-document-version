# Learn detailed information about the fields of an extension.yaml file in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml

# Identifier for your extension
name: firestore-document-versioning
version: 0.0.1 # Follow semver versioning
specVersion: v1beta # Version of the Firebase Extensions specification

# Friendly display name for your extension (~3-5 words)
displayName: Firestore Document Versioning

# Brief description of the task your extension performs (~1 sentence)
description: >-
  Creates firestore documents versions on document writes. Supporting soft delete and recover

license: Apache-2.0 # https://spdx.org/licenses/

author:
  authorName: Gaussiana
url: https://github.com/InGaussiana

# Public URL for the source code of your extension.
sourceUrl: https://github.com/InGaussiana/ext-firestore-document-version

# Specify whether a paid-tier billing plan is required to use your extension.
# Learn more in the docs: https://firebase.google.com/docs/extensions/reference/extension-yaml#billing-required-field
billingRequired: true

# In an `apis` field, list any Google APIs (like Cloud Translation, BigQuery, etc.)
# required for your extension to operate.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#apis-field

# In a `roles` field, list any IAM access roles required for your extension to operate.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#roles-field

# In the `resources` field, list each of your extension's functions, including the trigger for each function.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#resources-field
resources:
  - name: manageDocumentVersions
    type: firebaseextensions.v1beta.function
    description: >-
      Firestore-OnWrite-triggered function that creates the versions of documents
    properties:
      eventTrigger:
        eventType: providers/cloud.firestore/eventTypes/document.write
        resource: projects/${PROJECT_ID}/databases/(default)/documents/${COLLECTION}/{documentId}
      runtime: "nodejs16"

# In the `params` field, set up your extension's user-configured parameters.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#params-field
params:
  - param: COLLECTION
    label: Collection path
    description: >-
      Collection path to versionate
    type: string
    example: collection/{documentId}/subcollection
    default: "{document=**}"
    required: false
  - param: HISTORY_COLLECTION
    label: History collection path
    description: >-
      Collection path where to save history data
    type: string
    example: history
    default: history
    required: false
  - param: ENABLE_RESTORE
    label: Enable restore operation
    description: >-
      Enable keep track of deleted documents and its versions (like a soft delete). Giving the possibility to restore deleted documents
    type: boolean
    example: true
    default: true
    required: false
  - param: IGNORE_FIELDS
    label: Ignore fields
    description: >-
      Comma separated fields that won't trigger a new history version (nor will be saved on the version data). Nested fields are supported with parent.child syntax.
    type: string
    example: updated_at,created_at
    default:
    required: false
  - param: RESTORE_FIELD
    label: Restore field name
    description: >-
      Field used for restore document operation.  This must be the only field in the document's update, in order to restore the document wanted.
    type: string
    example: _restore
    default: _restore
    required: false
  - param: GOTO_FIELD
    label: Goto field name
    description: >-
      Field used for goto version operation. This must be the only field in the document's update, in order to goto the version wanted.
    type: string
    example: _goto
    default: _goto
    required: false
  - param: UNDO_FIELD
    label: Undo field name
    description: >-
      Field used for undo version operation. This must be the only field in the document's update, in order to undo the change.
    type: string
    example: _undo
    default: _undo
    required: false
  - param: REDO_FIELD
    label: Redo field name
    description: >-
      Field used for redo version operation. This must be the only field in the document's update, in order to redo the change.
    type: string
    example: _redo
    default: _redo
    required: false
  - param: VERSION_FIELD
    label: Actual version field name
    description: >-
      Field used to keep track in which version the document is. This must not be changed manually, ever!.
    type: string
    example: _version
    default: _version
    required: false
